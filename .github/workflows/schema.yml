---
name: Build Language Schema

# yamllint disable-line rule:truthy
on:
  push:
    branches: [dev, lvgl]

  pull_request:
    paths:
      - "**"
      - "!.github/workflows/*.yml"
      - ".github/workflows/schema.yml"
  merge_group:

permissions:
  contents: read

env:
  DEFAULT_PYTHON: "3.9"
  PYUPGRADE_TARGET: "--py39-plus"
  CLANG_FORMAT_VERSION: "13.0.1"

concurrency:
  # yamllint disable-line rule:line-length
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  common:
    name: Create common environment
    runs-on: ubuntu-latest
    outputs:
      cache-key: ${{ steps.cache-key.outputs.key }}
    steps:
      - name: Check out code from GitHub
        uses: actions/checkout@v4.1.1
      - name: Generate cache-key
        id: cache-key
        run: echo key="${{ hashFiles('requirements.txt', 'requirements_optional.txt', 'requirements_test.txt') }}" >> $GITHUB_OUTPUT
      - name: Set up Python ${{ env.DEFAULT_PYTHON }}
        id: python
        uses: actions/setup-python@v5.0.0
        with:
          python-version: ${{ env.DEFAULT_PYTHON }}
      - name: Restore Python virtual environment
        id: cache-venv
        uses: actions/cache@v3.3.2
        with:
          path: venv
          # yamllint disable-line rule:line-length
          key: ${{ runner.os }}-${{ steps.python.outputs.python-version }}-venv-${{ steps.cache-key.outputs.key }}
      - name: Create Python virtual environment
        if: steps.cache-venv.outputs.cache-hit != 'true'
        run: |
          python -m venv venv
          . venv/bin/activate
          python --version
          pip install -r requirements.txt -r requirements_optional.txt -r requirements_test.txt
          pip install -e .

  schema:
    name: Create schema
    runs-on: ubuntu-latest
    needs:
      - common
    steps:
      - name: Check out code from GitHub
        uses: actions/checkout@v4.1.1
      - name: Restore Python
        uses: ./.github/actions/restore-python
        with:
          python-version: ${{ env.DEFAULT_PYTHON }}
          cache-key: ${{ needs.common.outputs.cache-key }}
      - name: Create Schema files
        run: |
          . venv/bin/activate
          mkdir -p schema_output
          cd schema_output
          python ../script/build_language_schema.py
      - id: 'auth'
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GCLOUD_UPLOAD_KEY }}'
          service_account: '${{ secrets.GCLOUD_SERVICE_ACCOUNT }}'

      - id: 'upload-folder'
        uses: 'google-github-actions/upload-cloud-storage@v2'
        with:
          path: 'schema_output'
          destination: 'esphome-schema'
