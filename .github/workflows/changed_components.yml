# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  schedule:
    # Run twice a day
    - cron:  '11 5,17 * * *'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  publish-changed-component-list:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Check out release branch from GitHub
        uses: actions/checkout@v4.1.1
        with:
          ref: release
          # Fetch enough history so `git merge-base refs/remotes/origin/dev HEAD` works.
          fetch-depth: 500
      - name: Find changed components
        run: |
            mkdir -p changed_components
            ( echo "{ " 
              git diff origin/dev origin/release --name-only | grep esphome/components | sed 's#esphome/components/##' | sed 's#/.*$##' | sort -u | sed '/.*/"&",' | sed '1,$-1s/$/,/'
              echo "}"
            ) >publish_data/changed_components.json

        
    
      - name: Setup Pages
        uses: actions/configure-pages@v4
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload files
          path: 'publish_data'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
